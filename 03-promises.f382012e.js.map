{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAASC,SAASC,cAAc,SAChCC,EAAUF,SAASC,cAAc,qBACjCE,EAASH,SAASC,cAAc,oBAChCG,EAAWJ,SAASC,cAAc,sBA2BxC,SAASI,EAAcC,EAAUC,GAW/B,OAVgB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAlCPR,EAAOe,iBAAiB,UAExB,SAAgCC,GAC9BA,EAAIC,iBAKJ,IAJA,IAAIC,EAAWC,OAAOd,EAASe,OAC3BC,EAAQF,OAAOhB,EAAQiB,OACvBE,EAAOH,OAAOf,EAAOgB,OAEhBG,EAAQ,EAAGA,GAASL,EAAUK,IACrCjB,EAAciB,EAAOF,GAClBG,MAAK,SAAAC,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MACjBkB,EAAA5B,GAAS6B,OAAOC,QACd,uBAAwCC,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAGjDsB,OAAM,SAAAL,G,IAAGlB,EAAQkB,EAARlB,SAAUC,EAAKiB,EAALjB,MAClBkB,EAAA5B,GAAS6B,OAAOI,QACd,sBAAqCF,OAAftB,EAAS,QAAYsB,OAANrB,EAAM,M,IAIjDa,GAASC,C,IAoBbI,EAAA5B,GAAS6B,OAAOK,KAAK,CACnBC,SAAS,EACTC,SAAU,Q","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nconst delayEl = document.querySelector('input[name=delay]');\nconst stepEl = document.querySelector('input[name=step]');\nconst amountEl = document.querySelector('input[name=amount]');\n\nformEl.addEventListener('submit', onCreateAmountPromises);\n\nfunction onCreateAmountPromises(evt) {\n  evt.preventDefault();\n  let position = Number(amountEl.value);\n  let delay = Number(delayEl.value);\n  let step = Number(stepEl.value);\n\n  for (let index = 1; index <= position; index++) {\n    createPromise(index, delay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  return promise;\n}\n\n// Notiflix styles\n\nNotiflix.Notify.init({\n  useIcon: false,\n  fontSize: '15px',\n});\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$formEl","document","querySelector","$ce04d3a99e08e73b$var$delayEl","$ce04d3a99e08e73b$var$stepEl","$ce04d3a99e08e73b$var$amountEl","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","position1","Number","value","delay1","step","index","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","init","useIcon","fontSize"],"version":3,"file":"03-promises.f382012e.js.map"}